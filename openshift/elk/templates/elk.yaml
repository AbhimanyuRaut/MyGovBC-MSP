apiVersion: v1
kind: Template
metadata:
  annotations:
    description: ELK+nginx
    tags: instant-app
  name: elk
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: openshift elasticsearch
    name: os-elasticsearch
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: openshift logstash
    name: os-logstash
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: openshift kibana
    name: os-kibana
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: elk nginx
    name: elk-nginx
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: elasticsearch
    labels:
      app: ${NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
    triggers:
      -
        type: ConfigChange
      -
        type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - elasticsearch
          from:
            kind: ImageStreamTag
            name: 'os-elasticsearch:latest'
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: elasticsearch
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: elasticsearch
      spec:
        volumes:
          -
            name: elasticsearch-data
            persistentVolumeClaim:
              claimName: elasticsearch-rwo
        containers:
          -
            name: elasticsearch
            image: os-elasticsearch
            ports:
              -
                containerPort: 9200
                protocol: TCP
              -
                containerPort: 9300
                protocol: TCP
            resources:
              limits:
                memory: 4Gi
              requests:
                memory: 2Gi
            volumeMounts:
              -
                name: elasticsearch-data
                mountPath: /usr/share/elasticsearch/data
            livenessProbe:
              httpGet:
                path: /
                port: 9200
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /
                port: 9200
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 5
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: kibana
    labels:
      app: ${NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
    triggers:
      -
        type: ConfigChange
      -
        type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - kibana
          from:
            kind: ImageStreamTag
            name: 'os-kibana:latest'
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: kibana
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: kibana
      spec:
        containers:
          -
            name: kibana
            image: os-kibana
            ports:
              -
                containerPort: 5601
                protocol: TCP
            resources:
            livenessProbe:
              httpGet:
                path: /
                port: 5601
                scheme: HTTP
              initialDelaySeconds: 120
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /
                port: 5601
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: logstash
    labels:
      app: ${NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
    triggers:
      -
        type: ConfigChange
      -
        type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - logstash
          from:
            kind: ImageStreamTag
            name: 'os-logstash:latest'
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: logstash
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: logstash
      spec:
        containers:
          -
            name: logstash
            image: os-logstash
            ports:
              -
                containerPort: 8080
                protocol: TCP
            resources:
              limits:
                memory: 2Gi
              requests:
                memory: 1Gi
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: elk-nginx
    labels:
      app: ${NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources:
    triggers:
      -
        type: ConfigChange
      -
        type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - elk-nginx
          from:
            kind: ImageStreamTag
            name: 'elk-nginx:latest'
    replicas: 1
    test: false
    selector:
      app: ${NAME}
      deploymentconfig: elk-nginx
    template:
      metadata:
        labels:
          app: ${NAME}
          deploymentconfig: elk-nginx
      spec:
        containers:
          -
            name: elk-nginx
            image: elk-nginx
            ports:
              -
                containerPort: 8080
                protocol: TCP
              -
                containerPort: 8081
                protocol: TCP
            env:
              -
                name: KIBANA_PASSWORD
                value: ${KIBANA_PASSWORD}
            resources:
            livenessProbe:
              httpGet:
                path: /
                port: 8081
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /
                port: 8081
                scheme: HTTP
              initialDelaySeconds: 60
              timeoutSeconds: 10
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
- apiVersion: v1
  kind: Service
  metadata:
    name: elasticsearch
    labels:
      app: ${NAME}
  spec:
    ports:
      -
        name: 9200-tcp
        protocol: TCP
        port: 9200
        targetPort: 9200
      -
        name: 9300-tcp
        protocol: TCP
        port: 9300
        targetPort: 9300
    selector:
      deploymentconfig: elasticsearch
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: kibana
    labels:
      app: ${NAME}
  spec:
    ports:
      -
        name: 5601-tcp
        protocol: TCP
        port: 5601
        targetPort: 5601
    selector:
      deploymentconfig: kibana
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: logstash
    labels:
      app: ${NAME}
  spec:
    ports:
      -
        name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
    selector:
      deploymentconfig: logstash
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Service
  metadata:
    name: elk-nginx
    labels:
      app: ${NAME}
  spec:
    ports:
      -
        name: 8080-tcp
        protocol: TCP
        port: 8080
        targetPort: 8080
      -
        name: 8081-tcp
        protocol: TCP
        port: 8081
        targetPort: 8081
    selector:
      deploymentconfig: elk-nginx
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Route
  metadata:
    name: kibana
    labels:
      app: ${NAME}
  spec:
    to:
      kind: Service
      name: elk-nginx
      weight: 100
    port:
      targetPort: 8081-tcp
- apiVersion: v1
  kind: Route
  metadata:
    name: logstash
    labels:
      app: ${NAME}
  spec:
    to:
      kind: Service
      name: elk-nginx
      weight: 100
    port:
      targetPort: 8080-tcp
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: elasticsearch-rwo
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
parameters:
- description: The name assigned to all of the openshift objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: elk
- description: Volume space available for elasticsearch data, e.g. 512Mi, 1Gi
  displayName: Volume capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi
- description: Password for Kibana web console. User name is fixed to admin.
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: KIBANA_PASSWORD
